data "azuredevops_project" "project" {
  name     = var.azure_devops_project_name
}

locals {
  org_service_url = "https://dev.azure.com/${var.azure_devops_organization_name}"
}

resource "azuredevops_variable_group" "terraform" {
  project_id   = data.azuredevops_project.project.id
  name         = var.azure_devops_variable_group_name
  description  = "Variables for the Terraform backend"
  allow_access = true

  variable {
    name  = "BACKEND_AZURE_RESOURCE_GROUP_NAME"
    value = var.resource_group_name
  }

  variable {
    name  = "BACKEND_AZURE_STORAGE_ACCOUNT_NAME"
    value = var.storage_account_name
  }

  variable {
    name  = "BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME"
    value = var.storage_container_name
  }
}

resource "azuredevops_serviceendpoint_azurerm" "terraform" {
  project_id                             = data.azuredevops_project.project.id
  service_endpoint_name                  = var.azure_devops_service_connection_name
  description                            = "Generated by Terraform"
  service_endpoint_authentication_scheme = "WorkloadIdentityFederation"

  credentials {
    serviceprincipalid = var.client_id
  }

  azurerm_spn_tenantid      = var.tenant_id
  azurerm_subscription_id   = var.subscription_id
  azurerm_subscription_name = var.subscription_display_name
}

resource "azurerm_federated_identity_credential" "terraform" {
  name                = "Azure DevOps"
  resource_group_name = var.resource_group_name
  parent_id           = var.managed_identity_id
  audience            = ["api://AzureADTokenExchange"]
  subject             = azuredevops_serviceendpoint_azurerm.terraform.workload_identity_federation_subject
  issuer              = azuredevops_serviceendpoint_azurerm.terraform.workload_identity_federation_issuer
}
